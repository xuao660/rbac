<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.xa.rbac.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="org.xa.rbac.model.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="CHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
    	<result column="gender" property="gender" jdbcType="VARCHAR"/>
    	<result column="birthday" property="birthday" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
       
    </resultMap>
    <resultMap id="UserWithRoles" type="org.xa.rbac.model.User" extends="BaseResultMap">
        <collection property="roles" ofType="org.xa.rbac.model.Role">
            <id column="rid" property="id"/>
            <result column="rname" property="name"/>
            <result column="rnameZh" property="nameZh"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, phone, gender,birthday,telephone, address, username, password
  </sql>
    <select id="getAllUsersExceptCurrentUser" resultMap="BaseResultMap">
        select * from user where id !=#{id};
    </select>
    <select id="getAllUsers" resultMap="UserWithRoles">
        select  user.id, user.name, user.phone, user.address, user.gender, user.username, user.birthday,
       r.`id` as rid,r.`name` as rname,r.`nameZh` as rnameZh from user left join user_role userr on
        user.`id`=userr.`uid` left join role r on userr.`rid`=r.`id` where user.`id`!=#{uid}
        <if test="keywords!=null">
            and user.name like concat('%',#{keywords},'%')
        </if>
        order by user.id
    </select>
    <select id="getUserRolesById" resultType="org.xa.rbac.model.Role">
    select r.* from role r,user_role as ur where ur.`rid`=r.`id` and ur.`uid`=#{id}
  </select>
    <select id="loadUserByUsername" resultMap="BaseResultMap">
    select * from user where username=#{username}
  </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.xa.rbac.model.User">
    insert into User (id, name,phone, address, gender,birthday,username, password
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=CHAR}, 
      #{address,jdbcType=VARCHAR},  #{gender,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR},
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR} )
      
  </insert>
    <insert id="insertSelective" parameterType="org.xa.rbac.model.User">
        insert into User
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="address != null">
                address,
            </if>
           
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
           
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=CHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
           
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.xa.rbac.model.User">
        update User
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=CHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
           
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
   
    <update id="updatePasswd">
        update User set password = #{encodePass} where id=#{Userid};
    </update>
    <update id="updateByPrimaryKey" parameterType="org.xa.rbac.model.User">
    update User
    set name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=CHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>